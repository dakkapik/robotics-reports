<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Report</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap');

        html, body{
            font-family: 'Roboto', sans-serif;
            margin: 0;
        }   
    </style>
</head>
<body>
    <form action="<%= address %>" method="post" id="form">
        <div>
            <label for="name">name:</label>
            <select id="user-select" name="user_id" form="form">
                <option>REPORTER NAME</option>
            </select>
            <input id="password" name="password" type="password" placeholder="PASSWORD" required>
        </div>
        <label for="goals">Goals</label><br>
        <textarea id="goals" name="goals" rows="5" cols="50" >
        </textarea><br>
        <label for="results">Results</label><br>
        <textarea id="results" name="results" rows="5" cols="50" >
        </textarea><br>
        <input type="submit" value="Submit">
    </form>
    <div>
        <p>Define daily goals with "-[goal name]"</p>
        <p>Add with results to each goal with "-[result name]"</p>
    </div>
    <div id="message"></div>
</body>
<script>
    const form = document.getElementById("form")
    const message = document.getElementById("message")
    const userSelect = document.getElementById("user-select")
    console.log(form.action + "users")
    fetch(form.action + "users")
    .then(response => response.json())
    .then(data => {
        console.log(data)
        data.forEach(user => {
            const op = document.createElement("option")
            op.value = user._id
            op.innerHTML = user.name
            userSelect.appendChild(op)
        });
    })

    const submit = async (e) => {
        e.preventDefault()
        const response = await fetch(form.action + "reports", {
            method: 'POST', // *GET, POST, PUT, DELETE, etc.
            mode: 'cors', // no-cors, *cors, same-origin
            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', // include, *same-origin, omit
            headers: {
            'Content-Type': 'application/json'
            // 'Content-Type': 'application/x-www-form-urlencoded',
            },
            redirect: 'follow', // manual, *follow, error
            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
            body: JSON.stringify({
                user_id: userSelect.value,
                password: document.getElementById("password").value,
                goals: document.getElementById("goals").value,
                results: document.getElementById("results").value
            }) // body data type must match "Content-Type" header
        });

        response.json()
        .then(data => {
            if(data.error){
                message.innerHTML = "ERROR: " + data.error
            } else {
                message.innerHTML = "REPORT SUBMITED"
            }

        })
    }

    form.addEventListener("submit", submit, true)
    
</script>
</html>